FASTA_VECTOR_LIB_NAME = libfastavector
FASTA_VECTOR_MAJOR_VERSION = 1
FASTA_VECTOR_MINOR_VERSION = 0
FASTA_VECTOR_VERSION = $(FASTA_VECTOR_MAJOR).$(FASTA_VECTOR_MINOR_VERSION)

CC 														= gcc
CFLAGS 												= -std=c11 -Wall -mtune=native -O3 -fPIC
LDFLAGS_SHARED_LIB 						= -shared
STATIC_LIB_FILE_EXTENSION 		= .a


FASTA_VECTOR_PROJECT_DIR = $(shell dirname $(realpath $(firstword $(MAKEFILE_LIST))))
FASTA_VECTOR_BUILD_DIR = $(FASTA_VECTOR_PROJECT_DIR)/build
FASTA_VECTOR_SRC_DIR = $(FASTA_VECTOR_PROJECT_DIR)/src

ifeq ($(PREFIX),)
PREFIX := /usr/local
endif



#determine the current operating system
OS_NAME 	= $(shell uname -s)
ifeq ($(OS_NAME), Darwin)
FASTA_VECTOR_SHARED_LIB_FILENAME 	= $(FASTA_VECTOR_LIB_NAME).dylib
else
FASTA_VECTOR_SHARED_LIB_FILENAME 	= $(FASTA_VECTOR_LIB_NAME).so
endif
FASTA_VECTOR_STATIC_LIB_FILENAME 	= $(FASTA_VECTOR_LIB_NAME).a
FASTA_VECTOR_HEADER_FILENAME 									= FastaVector.h
FASTA_VECTOR_METADATA_VECTOR_HEADER_FILENAME 	= FastaVectorMetadataVector.h
FASTA_VECTOR_STRING_HEADER_FILENAME 					= FastaVectorString.h


FASTA_VECTOR_BUILD_INCLUDE_DIR 		= $(FASTA_VECTOR_BUILD_DIR)/include
FASTA_VECTOR_BUILD_LIB_DIR				=	$(FASTA_VECTOR_BUILD_DIR)/lib

FASTA_VECTOR_PROJECT_HEADER_SRC 								= $(FASTA_VECTOR_SRC_DIR)/$(FASTA_VECTOR_HEADER_FILENAME)
FASTA_VECTOR_METADATA_VECTOR_PROJECT_HEADER_SRC = $(FASTA_VECTOR_SRC_DIR)/$(FASTA_VECTOR_METADATA_VECTOR_HEADER_FILENAME)
FASTA_VECTOR_STRING_PROJECT_HEADER_SRC					= $(FASTA_VECTOR_SRC_DIR)/$(FASTA_VECTOR_STRING_HEADER_FILENAME)
FASTA_VECTOR_BUILD_HEADER_SRC 		= $(FASTA_VECTOR_BUILD_INCLUDE_DIR)/$(FASTA_VECTOR_HEADER_FILENAME)
FASTA_VECTOR_SHARED_LIB_BUILD_SRC = $(FASTA_VECTOR_BUILD_LIB_DIR)/$(FASTA_VECTOR_SHARED_LIB_FILENAME)
FASTA_VECTOR_STATIC_LIB_BUILD_SRC = $(FASTA_VECTOR_BUILD_LIB_DIR)/$(FASTA_VECTOR_STATIC_LIB_FILENAME)


FASTA_VECTOR_INSTALL_DIR 								= $(DESTDIR)$(PREFIX)
FASTA_VECTOR_INSTALL_LIB_DIR 						= $(FASTA_VECTOR_INSTALL_DIR)/lib
FASTA_VECTOR_INSTALL_INCLUDE_DIR 				= $(FASTA_VECTOR_INSTALL_DIR)/include
FASTA_VECTOR_INSTALL_HEADER_SRC 				= $(FASTA_VECTOR_INSTALL_INCLUDE_DIR)/$(FASTA_VECTOR_HEADER_FILENAME)
FASTA_VECTOR_METADATA_VECTOR_INSTALL_HEADER_SRC = $(FASTA_VECTOR_INSTALL_INCLUDE_DIR)/$(FASTA_VECTOR_METADATA_VECTOR_HEADER_FILENAME)
FASTA_VECTOR_STRING_INSTALL_HEADER_SRC 					= $(FASTA_VECTOR_INSTALL_INCLUDE_DIR)/$(FASTA_VECTOR_STRING_HEADER_FILENAME)
FASTA_VECTOR_INSTALL_STATIC_LIB_SRC 		= $(FASTA_VECTOR_INSTALL_LIB_DIR)/$(FASTA_VECTOR_STATIC_LIB_FILENAME)
FASTA_VECTOR_INSTALL_SHARED_LIB_SRC 		= $(FASTA_VECTOR_INSTALL_LIB_DIR)/$(FASTA_VECTOR_SHARED_LIB_FILENAME)

BUILD_LIB_TARGETS = $(FASTA_VECTOR_STATIC_LIB_BUILD_SRC) $(FASTA_VECTOR_SHARED_LIB_BUILD_SRC) $(FASTA_VECTOR_BUILD_HEADER_SRC)

SRCS := $(shell find $(FASTA_VECTOR_SRC_DIR) -name *.c)
OBJS := $(patsubst $(FASTA_VECTOR_SRC_DIR)/%, $(FASTA_VECTOR_BUILD_DIR)/%, $(SRCS:.c=.o))


$(FASTA_VECTOR_BUILD_DIR)/%.o: $(FASTA_VECTOR_SRC_DIR)/%.c
	$(CC) $(CFLAGS) $(CFLAGS) -c $< -o $@


.PHONY: shared
shared: $(FASTA_VECTOR_BUILD_INCLUDE_DIR) $(FASTA_VECTOR_BUILD_LIB_DIR) $(OBJS)
	$(CC) -o $(FASTA_VECTOR_SHARED_LIB_BUILD_SRC) $(LDFLAGS_SHARED_LIB) $(OBJS)
	cp $(FASTA_VECTOR_PROJECT_HEADER_SRC) $(FASTA_VECTOR_BUILD_HEADER_SRC)

.PHONY: static
static: $(FASTA_VECTOR_BUILD_INCLUDE_DIR) $(FASTA_VECTOR_BUILD_LIB_DIR) $(OBJS)
	ar rcs $(FASTA_VECTOR_STATIC_LIB_BUILD_SRC) $(OBJS)
	cp $(FASTA_VECTOR_PROJECT_HEADER_SRC) $(FASTA_VECTOR_BUILD_HEADER_SRC)

.PHONY: clean
clean:
	rm -f $(BUILD_LIB_TARGETS) $(OBJS)
	$(RM)

.PHONY: install
install:$(FASTA_VECTOR_INSTALL_LIB_DIR) $(FASTA_VECTOR_INSTALL_INCLUDE_DIR)
	cp $(FASTA_VECTOR_PROJECT_HEADER_SRC) $(FASTA_VECTOR_INSTALL_HEADER_SRC)
	cp $(FASTA_VECTOR_METADATA_VECTOR_PROJECT_HEADER_SRC) $(FASTA_VECTOR_METADATA_VECTOR_INSTALL_HEADER_SRC)
	cp $(FASTA_VECTOR_STRING_PROJECT_HEADER_SRC) $(FASTA_VECTOR_STRING_INSTALL_HEADER_SRC)
	#copy the library files to the install src if they exist
ifneq ("$(wildcard $(FASTA_VECTOR_STATIC_LIB_BUILD_SRC))","")
	cp $(FASTA_VECTOR_STATIC_LIB_BUILD_SRC) $(FASTA_VECTOR_INSTALL_STATIC_LIB_SRC)
endif
ifneq ("$(wildcard $(FASTA_VECTOR_SHARED_LIB_BUILD_SRC))","")
	cp $(FASTA_VECTOR_SHARED_LIB_BUILD_SRC) $(FASTA_VECTOR_INSTALL_SHARED_LIB_SRC)
endif


.PHONY: uninstall
uninstall:
	rm -f $(FASTA_VECTOR_INSTALL_HEADER_SRC)
	rm -f $(FASTA_VECTOR_METADATA_VECTOR_INSTALL_HEADER_SRC)
	rm -f $(FASTA_VECTOR_STRING_INSTALL_HEADER_SRC)
	rm -f $(FASTA_VECTOR_INSTALL_STATIC_LIB_SRC)
	rm -f $(FASTA_VECTOR_INSTALL_SHARED_LIB_SRC)


#make the build directories if they do not exist.
$(FASTA_VECTOR_BUILD_DIR):
	mkdir -p $(FASTA_VECTOR_BUILD_DIR)

$(FASTA_VECTOR_BUILD_INCLUDE_DIR): $(FASTA_VECTOR_BUILD_DIR)
	mkdir -p $(FASTA_VECTOR_BUILD_INCLUDE_DIR)

$(FASTA_VECTOR_BUILD_LIB_DIR): $(FASTA_VECTOR_BUILD_DIR)
	mkdir -p $(FASTA_VECTOR_BUILD_LIB_DIR)

$(FASTA_VECTOR_INSTALL_LIB_DIR):
	mkdir -p $(FASTA_VECTOR_INSTALL_LIB_DIR)

$(FASTA_VECTOR_INSTALL_INCLUDE_DIR):
	mkdir -p $(FASTA_VECTOR_INSTALL_INCLUDE_DIR)
